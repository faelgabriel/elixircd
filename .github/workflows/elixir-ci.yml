name: Elixir CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ELIXIR_VERSION: "1.18.3"
  OTP_VERSION: "27.3"

jobs:
  code_quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore deps cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-deps-

      - name: Restore _build cache
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-mix-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-build-

      - name: Restore Dialyzer PLT cache
        id: plt-cache
        uses: actions/cache@v4
        with:
          key: |
            plt-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('**/*.ex') }}
          restore-keys: |
            plt-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('**/*.ex') }}
            plt-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}-
            plt-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-
            plt-${{ runner.os }}-${{ env.OTP_VERSION }}-
          path: |
            .dialyzer

      - name: Install dependencies
        run: mix deps.get

      - name: Compile code
        run: mix compile --warnings-as-errors

      - name: Check code formatting
        run: mix format --check-formatted

      - name: Run Credo for linting
        run: mix credo --strict

      - name: Run Sobelow security check
        run: mix sobelow --config

      - name: Run MixAudit security check
        run: mix deps.audit

      - name: Run Doctor for documentation health
        run: mix doctor

      - name: Create Dialyzer PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true' || github.run_attempt != '1'
        run: |
          mkdir -p .dialyzer
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --format github

  tests_and_coverage:
    name: Tests & Coverage
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Restore deps cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-deps-

      - name: Restore _build cache
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-mix-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile code
        run: mix compile

      - name: Run Tests with Coverage
        run: mix coveralls
        if: github.event_name == 'pull_request'

      - name: Run Tests with Coverage and publish to Coveralls
        run: mix coveralls.github
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
