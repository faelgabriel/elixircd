name: Docker Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_dev:
    name: Build and Test Development Docker Container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          target: development
          load: true
          push: false
          tags: elixircd:development
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run container
        run: docker run -p 6667:6667 -p 6697:6697 -v $(pwd):/app -v deps:/app/deps -v build:/app/_build --name elixircd -d elixircd:development mix run --no-halt

      - name: Check if the server is running
        run: |
          timeout=30
          echo "Waiting for the server to start on port 6667..."
          while ! nc -z localhost 6667; do
            sleep 1
            timeout=$((timeout - 1))
            if [[ $timeout -eq 0 ]]; then
              echo "Port 6667 did not become available in time."
              exit 1
            fi
          done
          echo "Port 6667 is open and ready for connections!"

      - name: Display container logs
        if: always()
        run: docker logs elixircd

      - name: Stop container
        if: always()
        run: docker rm --force elixircd

  build_prod:
    name: Build and Test Production Docker Container
    runs-on: ubuntu-latest
    needs: build_dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          target: production
          load: true
          push: false
          tags: elixircd:production
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run container
        run: docker run -p 6667:6667 -p 6697:6697 --name elixircd -d elixircd:production

      - name: Check if the server is running
        run: |
          timeout=30

          echo "Waiting for the server to start on port 6667..."
          while ! nc -z localhost 6667; do
            sleep 1
            timeout=$((timeout - 1))
            if [[ $timeout -eq 0 ]]; then
              echo "Port 6667 did not become available in time."
              exit 1
            fi
          done
          echo "Port 6667 is open and ready for connections!"
