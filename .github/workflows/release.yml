name: Build and Release

on:
  push:
    tags:
      - "*.*.*"

env:
  ELIXIR_VERSION: "1.16.1"
  OTP_VERSION: "26.2.2"

jobs:
  build-macos-arm64:
    runs-on: macos-latest
    name: Build on macOS (ARM64)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Install dependencies
        run: mix deps.get

      - name: Build release
        env:
          APP_VERSION: ${{ github.ref_name }}
        run: mix release

      - name: Package release
        run: tar -czvf elixircd-${{ github.ref_name }}-macos-arm64.tar.gz -C _build/prod/rel/elixircd .

      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: elixircd-macos-arm64
          path: elixircd-${{ github.ref_name }}-macos-arm64.tar.gz

  build-macos-x86_64:
    runs-on: macos-latest-large
    name: Build on macOS (x86_64)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Install dependencies
        run: mix deps.get

      - name: Build release
        run: mix release

      - name: Package release
        run: tar -czvf elixircd-${{ github.ref_name }}-macos-x86_64.tar.gz -C _build/prod/rel/elixircd .

      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: elixircd-macos-x86_64
          path: elixircd-${{ github.ref_name }}-macos-x86_64.tar.gz

  build-linux-x86_64:
    runs-on: ubuntu-latest
    name: Build on Linux (x86_64)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Install dependencies
        run: mix deps.get

      - name: Build release
        run: mix release

      - name: Package release
        run: tar -czvf elixircd-${{ github.ref_name }}-linux-x86_64.tar.gz -C _build/prod/rel/elixircd .

      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: elixircd-linux-x86_64
          path: elixircd-${{ github.ref_name }}-linux-x86_64.tar.gz

  build-linux-arm64:
    runs-on: ubuntu-latest
    name: Build on Linux (ARM64)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Install dependencies
        run: mix deps.get

      - name: Install qemu for ARM emulation
        run: sudo apt-get install -y qemu-user-static

      - name: Build release
        run: mix release

      - name: Package release
        run: tar -czvf elixircd-${{ github.ref_name }}-linux-arm64.tar.gz -C _build/prod/rel/elixircd .

      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: elixircd-linux-arm64
          path: elixircd-${{ github.ref_name }}-linux-arm64.tar.gz

  build-windows-x86_64:
    runs-on: windows-latest
    name: Build on Windows (x86_64)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Install dependencies
        run: mix deps.get

      - name: Build release
        run: mix release

      - name: Package release
        run: powershell Compress-Archive -Path _build\prod\rel\elixircd\* -DestinationPath elixircd-${{ github.ref_name }}-windows-x86_64.zip

      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: elixircd-windows-x86_64
          path: elixircd-${{ github.ref_name }}-windows-x86_64.zip
